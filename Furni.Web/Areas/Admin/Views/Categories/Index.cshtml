@model IEnumerable<CategoryViewModel>

@{
    ViewData["Title"] = "Categories";

}

@section Styles {
    <link rel="stylesheet" href="~/lib/magnific-popup.js/magnific-popup.min.css">
}

<partial name="_Toolbar" />


<div class="card shadow-sm">
    <partial name="_DataTablesCardHeader" /> 
    <div class="card-body pt-0">
        <div class="table-responsive">
            <table class="table table-row-bordered gy-4 align-middle js-datatables" data-document-title="Categories">
                <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>Category</th>
                        <th>Status</th>
                        <th>Created On</th>
                        <th>Last Updated On</th>
                        <th class="js-no-export text-end">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model)
                    {
                        <partial name="_CategoryRow" model="@category" />
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

@section Plugins {
    <script src="~/assets/plugins/datatables/datatables.bundle.js"></script>
    <script src="~/assets/plugins/datatables/vfs_fonts.js"></script>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/lib/expressive-annotations-validate/expressive.annotations.validate.min.js"></script>

    <script>
        $(document).on('shown.bs.modal', '#Modal', function () {
            var imageInput = document.getElementById('image-input');
            var imagePreview = document.getElementById('image-preview');

            if (imageInput && imagePreview) {
                var imagePreviewWrapper = imagePreview.querySelector('.image-input-wrapper');

                if (imagePreviewWrapper) {
                    imageInput.addEventListener('change', function (event) {
                        var input = event.target;
                        if (input.files && input.files[0]) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                imagePreviewWrapper.style.backgroundImage = 'url(' + e.target.result + ')';
                            };
                            reader.readAsDataURL(input.files[0]);
                        }
                    });
                }
            }
        });
    </script>

}